/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <locale/keys_de.h>

#define DEFAULT   0
#define SYMBOL    1
#define BLUE	  2

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp DE_N1       &kp DE_N2     &kp DE_N3 		 &kp DE_N4       &kp DE_N5   		&kp DE_N6 &kp DE_N7  &kp DE_N8     &kp DE_N9   &kp DE_N0       &kp BSPC
   &kp TAB   &kp DE_Q        &kp DE_W      &kp DE_E          &kp DE_R        &bootloader   		&kp DE_Z  &kp DE_U   &kp DE_I      &kp DE_O    &kp DE_P        &kp DE_U_UMLAUT 
   &kp CAPS  &kp DE_A        &kp DE_S      &kp DE_D          &kp DE_F        &kp DE_G    		&kp DE_H  &kp DE_J   &kp DE_K      &kp DE_L    &kp DE_O_UMLAUT &kp DE_A_UMLAUT
   &kp LCTRL &kp DE_Y        &kp DE_X      &kp DE_C          &kp DE_V        &kp DE_B    		&kp DE_N  &kp DE_M   &kp DE_COMMA  &kp DE_DOT  &kp DE_UNDER    &kp ESC
                             &kp DE_CARET  &kp DE_LESS_THAN  &kp DE_SPACE    &kp LEFT_WIN       &kp DE_N  &kp DE_M   &kp DE_COMMA  &kp DE_DOT
											                 &kp LSHFT       &kp LEFT_ALT       &kp DE_N  &kp DE_M
														                     &mo SYMBOL         &kp DE_N
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8   &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &kp DE_A     &trans       &kp DE_A     &trans         &trans   &trans   &trans   &trans    &trans &trans
   &trans	  &kp Z	       &trans       &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT &trans    &trans &trans
						   &trans       &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT &trans
													 &trans       &kp SPACE      &kp RET  &trans
																  &kp SPACE      &kp RET
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                      &trans &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT  &trans
									  &trans   &trans      &trans	 &trans	  
											   &trans      &trans
                        >;
                };
        };
};
